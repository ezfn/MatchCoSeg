function [LAFS1,LAFS2,pts1,pts2] = parseAffnetToAffineMatches(matches_file)
    load(matches_file,'LAFS1','LAFS2','dists');
    [~,qualitySortedIdxs] = sort(dists,'Ascend');
    LAFS1 = LAFS1(qualitySortedIdxs,:,:);
    LAFS2 = LAFS2(qualitySortedIdxs,:,:);
    pts1 = LAFS1(:,1:2,3)+1;
    pts2 = LAFS2(:,1:2,3)+1;
end
matches_file = '/media/Media/SWDEV/repos/MatchCoSeg/affnet/test-graf/matches.mat'
I1 = imread('/media/Media/SWDEV/repos/MatchCoSeg/affnet/test-graf/img1.png');
I2 = imread('/media/Media/SWDEV/repos/MatchCoSeg/affnet/test-graf/img2.png');
[HstackSrc,HstackDst] = parseAffnetToAffineMatches(matches_file)

Hhats = reshape(cell2mat(arrayfun(@(x) HstackSrc(:,:,x)\HstackDst(:,:,x),1:size(HstackSrc,3),'UniformOutput',false)),3,3,size(HstackSrc,3));
[ selectedIdxs ] = throwRedundantMatches( srcPhaseZero, dstPhaseZero, Hhats, 16);
HstackSrc =  HstackSrc(:,:,selectedIdxs);HstackDst =  HstackDst(:,:,selectedIdxs);
expandersList = expanderStuffParaDebug( HstackSrc, HstackDst,  INPUT.src.I, INPUT.dst.I,false);
[ srcPtsTriplets, dstPtsTriplets, srcPtsCellAll,dstPtsCellAll,transformations] = expandersListToAffineMatchTriplets(expandersList);